{"version":3,"sources":["webpack://lorehub-dialog-player/webpack/universalModuleDefinition","webpack://lorehub-dialog-player/webpack/bootstrap","webpack://lorehub-dialog-player/webpack/runtime/define property getters","webpack://lorehub-dialog-player/webpack/runtime/hasOwnProperty shorthand","webpack://lorehub-dialog-player/webpack/runtime/make namespace object","webpack://lorehub-dialog-player/./src/Dialog.js","webpack://lorehub-dialog-player/./src/DialogNode.js","webpack://lorehub-dialog-player/./src/DialogTextContent.js","webpack://lorehub-dialog-player/./src/convertDataToDialog.js","webpack://lorehub-dialog-player/./src/dto/ContetnBlockDTO.js","webpack://lorehub-dialog-player/./src/dto/DialogDTO.js","webpack://lorehub-dialog-player/./src/dto/DialogNodeDTO.js"],"names":["root","factory","exports","module","define","amd","this","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","Dialog","id","startNode","Error","_currnetNode","subscribe","nextNode","unsubscribe","DialogNode","content","length","subscribers","forEach","observer","onNext","subscriber","push","toRemoveIndex","findIndex","e","splice","DialogContent","convertDataToDialog","dialogDTO","dialogNodesDTO","contentBlocksDTO","startingNode","nodes","i","dto","contentDTOs","filter","c","dialogNodeId","sort","a","b","index","contentForNode","contentDTO","type","DialogTextContent","data","text","node","nextDialogNodeId","find","n","createDialogNodes","startingNodeId","ContetnBlockDTO","DialogDTO","DialogNodeDTO"],"mappings":"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","file":"lorehub-dialog-player.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"lorehub-dialog-player\"] = factory();\n\telse\n\t\troot[\"lorehub-dialog-player\"] = factory();\n})(this, function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import DialogNode from \"./DialogNode\";\n\nexport default class Dialog {\n  /**\n   * @param {String} id\n   * @param {DialogNode} startNode\n   */\n  constructor(id, startNode) {\n    if (id == null || startNode == null) {\n      throw new Error(\"Cannot create Dialog because id or/and startNode is null.\");\n    }\n\n    this.id = id;\n    this.startNode = startNode;\n    this._currnetNode = startNode;\n\n    startNode.subscribe(this);\n  }\n\n  /**\n   * @returns {DialogNode}\n   */\n  get currentNode() {\n    return this._currnetNode;\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  get finished() {\n    if (this._currnetNode.nextNode == null) return true;\n    return false;\n  }\n\n  /**\n   * @param {DialogNode} nextNode\n   */\n  onNext(nextNode) {\n    this._currnetNode.unsubscribe(this);\n    nextNode.subscribe(this);\n    this._currnetNode = nextNode;\n  }\n}\n","import DialogTextContent from \"./DialogTextContent\";\nexport default class DialogNode {\n  /**\n   * @param {String} id\n   * @param {Array<DialogTextContent> | DialogTextContent} content\n   * @param {DialogNode|null} nextNode\n   */\n  constructor(id, content, nextNode = null) {\n    if (id == null || content == null) {\n      throw new Error(\n        `Cannot create DialogNode because id: ${id} or content: ${content} is null.`\n      );\n    }\n\n    this.id = id;\n    this.nextNode = nextNode;\n\n    if (content.length == null) {\n      this.content = [content];\n    } else {\n      this.content = content;\n    }\n\n    this.subscribers = [];\n  }\n\n  /**\n   * @throws error when next node is null.\n   */\n  goNext() {\n    if (this.nextNode == null) {\n      throw new Error(\"NextNode is null, so I cannot go to next one.\");\n    }\n\n    this.subscribers.forEach(observer => {\n      observer.onNext(this.nextNode);\n    });\n  }\n\n  subscribe(subscriber) {\n    if (subscriber.onNext == null) {\n      throw new Error(\n        \"You cannot subscribe because 'onNext' function is not defined.\"\n      );\n    }\n    this.subscribers.push(subscriber);\n  }\n\n  unsubscribe(subscriber) {\n    const toRemoveIndex = this.subscribers.findIndex(e => e === subscriber);\n    if (toRemoveIndex > -1) {\n      this.subscribers.splice(toRemoveIndex, 1);\n    }\n  }\n}\n","export default class DialogContent {\n  /**\n   * @param {string} id\n   * @param {string} value\n   */\n  constructor(id, value) {\n    this.id = id;\n    this.value = value;\n  }\n}\n","import Dialog from \"./Dialog\";\nimport DialogNode from \"./DialogNode\";\nimport DialogTextContent from \"./DialogTextContent\";\nimport DialogDTO from \"./dto/DialogDTO\";\nimport DialogNodeDTO from \"./dto/DialogNodeDTO\";\nimport ContetnBlockDTO from \"./dto/ContetnBlockDTO\";\n\n/**\n * Will convert data from server to a dialog.\n * @param {DialogDTO} dialogDTO\n * @param {Array<DialogNodeDTO>} dialogNodesDTO\n * @param {Array<ContetnBlockDTO>} contentBlocksDTO\n * @returns {Dialog}\n */\nexport default function convertDataToDialog(\n  dialogDTO,\n  dialogNodesDTO,\n  contentBlocksDTO\n) {\n  if (dialogDTO == null || dialogNodesDTO == null || contentBlocksDTO == null) {\n    throw new Error(\n      `Cannot convert DTOs to a Dialog because \n      dialogDTO: ${dialogDTO} cannot be null OR \n      dialogNodesDTO: ${dialogNodesDTO} cannot be null OR \n      contentBlocksDTO: ${contentBlocksDTO} cannot be null.`\n    );\n  }\n\n  const nodes = createDialogNodes(dialogNodesDTO, contentBlocksDTO);\n  const startingNode = nodes.find(n => n.id === dialogDTO.startingNodeId);\n\n  if (startingNode == null) {\n    throw new Error(\n      `Cannot find starting node with id ${dialogDTO.startingNodeId}.`\n    );\n  }\n  const dialog = new Dialog(dialogDTO.id, startingNode);\n  return dialog;\n}\n\n/**\n * @param {Array<DialogNodeDTO>} dialogNodesDTO\n * @param {Array<ContetnBlockDTO>} contentBlocksDTO\n */\nfunction createDialogNodes(dialogNodesDTO, contentBlocksDTO) {\n  let nodes = [];\n  for (let i = 0; i < dialogNodesDTO.length; i++) {\n    const dto = dialogNodesDTO[i];\n    const contentDTOs = contentBlocksDTO\n      .filter(c => c.dialogNodeId == dto.id)\n      .sort((a, b) => (a.index > b.index ? 1 : -1));\n    let contentForNode = [];\n    for (let i = 0; i < contentDTOs.length; i++) {\n      const contentDTO = contentDTOs[i];\n      if (contentDTO.type === \"text\") {\n        const content = new DialogTextContent(\n          contentDTO.id,\n          contentDTO.data[0].text\n        );\n        contentForNode.push(content);\n      } else {\n        throw new Error(\n          `Cannot convert to DialogContent for type ${contentDTO.type}.`\n        );\n      }\n    }\n    nodes.push(new DialogNode(dto.id, contentForNode, null));\n  }\n\n  for (let i = 0; i < nodes.length; i++) {\n    const dto = dialogNodesDTO[i];\n    const node = nodes[i];\n    if (dto.nextDialogNodeId) {\n      node.nextNode = nodes.find(n => n.id === dto.nextDialogNodeId);\n    }\n  }\n  return nodes;\n}\n","export default class ContetnBlockDTO {\n  /**\n   * @param {String} id\n   * @param {String} dialogNodeId\n   * @param {String} type\n   * @param {Number} index\n   * @param {Array<any>} data\n   */\n  constructor(id, dialogNodeId, type, index, data) {\n    this.id = id;\n    this.dialogNodeId = dialogNodeId;\n    this.type = type;\n    this.index = index;\n    this.data = data;\n  }\n}\n","export default class DialogDTO {\n  /**\n   * @param {String} id\n   * @param {String} startingNodeId\n   */\n  constructor(id, startingNodeId) {\n    this.id = id;\n    this.startingNodeId = startingNodeId;\n  }\n}\n","export default class DialogNodeDTO {\n  /**\n   * @param {String} id\n   * @param {String | null} nextDialogNodeId\n   */\n  constructor(id, nextDialogNodeId = null) {\n    this.id = id;\n    this.nextDialogNodeId = nextDialogNodeId;\n  }\n}\n"],"sourceRoot":""}